apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-deploy
  labels:
    app: catalogue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalogue
  strategy: 
    type: RollingUpdate
    rollingUpdate:
     maxUnavailable: 2
  template:
    metadata:
      labels:
        app: catalogue
    spec:
      containers:
      - name: catalogue
        image: 992382386864.dkr.ecr.us-east-1.amazonaws.com/catalogue:301
        ports:
        - containerPort: 8080
        #livenessProbe
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        #Readiness probe
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        #Limits-requests
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        envFrom: 
          - configMapRef: 
              name: catalogue-cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue-cm
data:
  MONGO_URL: "mongodb://admin1:RoboShop1@roboshop-dev-docdb.cluster-cx6oecuq678h.us-east-1.docdb.amazonaws.com:27017/catalogue?tls=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"

---
#NodePort service
apiVersion: v1
kind: Service
metadata:
  name: catalogue-svc
spec:
  selector:
    app: catalogue
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
#HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: catalogue-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: catalogue
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75